{
	"info": {
		"_postman_id": "d68ebd51-aad4-4bba-8c6f-cbf51516eab4",
		"name": "Ciudad-Supermercado",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15409600"
	},
	"item": [
		{
			"name": "Asociar un nuevo supermercado a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/:ciudadId/supermarkets/:supermercadoId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						":ciudadId",
						"supermarkets",
						":supermercadoId"
					],
					"variable": [
						{
							"key": "ciudadId",
							"value": "{{ciudad_id}}"
						},
						{
							"key": "supermercadoId",
							"value": "{{supermercado_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Asociar un supermercado que no existe a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/:ciudadId/supermarkets/:supermercadoId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						":ciudadId",
						"supermarkets",
						":supermercadoId"
					],
					"variable": [
						{
							"key": "ciudadId",
							"value": "{{ciudad_id}}"
						},
						{
							"key": "supermercadoId",
							"value": "909aa629-273f-4186-a94e-e23b40c1cc7d"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todos los supermercados que pertenecen a una ciudad.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of museums > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/:ciudadId/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						":ciudadId",
						"supermarkets"
					],
					"variable": [
						{
							"key": "ciudadId",
							"value": "{{ciudad_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un supermercado asociado a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/:ciudadId/findSupermarketFromCity/:supermercadoId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						":ciudadId",
						"findSupermarketFromCity",
						":supermercadoId"
					],
					"variable": [
						{
							"key": "ciudadId",
							"value": "{{ciudad_id}}"
						},
						{
							"key": "supermercadoId",
							"value": "{{supermercado_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un supermercado que no está asociado a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El supermercado con el id proporcionado no ha sido encontrado.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/:ciudadId/findSupermarketFromCity/:supermercadoId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						":ciudadId",
						"findSupermarketFromCity",
						":supermercadoId"
					],
					"variable": [
						{
							"key": "ciudadId",
							"value": "{{ciudad_id}}"
						},
						{
							"key": "supermercadoId",
							"value": "37817931-87ea-489c-a6bf-01c11e59d580"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar los supermercados que están asociados a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[{\r\n    \"id\": \"6a7e48aa-037f-4840-b1c1-e27348d96d00\"\r\n},\r\n{\r\n    \"id\": \"592f4dd8-302a-434e-b572-11a8864e28ea\"\r\n}] ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/:ciudadId/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						":ciudadId",
						"supermarkets"
					],
					"variable": [
						{
							"key": "ciudadId",
							"value": "{{ciudad_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar los supermercados asociados a una ciudad, con un supermercado inexistente.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El supermercado con el id proporcionado no ha sido encontrado.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[{\r\n    \"id\": \"6a7e48aa-037f-4840-b1c1-e27348d96d00\"\r\n},\r\n{\r\n    \"id\": \"592f4dd8-302a-434e-b572-11a8864e28ea\"\r\n}] ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/:ciudadId/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						":ciudadId",
						"supermarkets"
					],
					"variable": [
						{
							"key": "ciudadId",
							"value": "{{ciudad_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un supermercado asociado a una ciudad.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/:ciudadId/supermarkets/:supermercadoId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						":ciudadId",
						"supermarkets",
						":supermercadoId"
					],
					"variable": [
						{
							"key": "ciudadId",
							"value": "{{ciudad_id}}"
						},
						{
							"key": "supermercadoId",
							"value": "{{supermercado_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un supermercado que no estaba previamente asociado a una ciudad.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El supermercado con el id proporcionado no ha sido encontrado.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/:ciudadId/supermarkets/:supermercadoId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						":ciudadId",
						"supermarkets",
						":supermercadoId"
					],
					"variable": [
						{
							"key": "ciudadId",
							"value": "{{ciudad_id}}"
						},
						{
							"key": "supermercadoId",
							"value": "b75054a6-2448-4f53-bc1b-91dcfa141e12"
						}
					]
				}
			},
			"response": []
		}
	]
}