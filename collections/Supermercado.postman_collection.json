{
	"info": {
		"_postman_id": "90da3c93-9ffd-4cce-8c2a-d4b20a284f35",
		"name": "Supermercado",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15409600"
	},
	"item": [
		{
			"name": "Crear un supermercado válido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"supermercado_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \"nombre\":\"Prueba Supermarket\", \r\n    \"longitud\": \"17.5729\",\r\n    \"latitud\": \"8.7864\",\r\n    \"pagWeb\": \"www.ejemplo.com\"\r\n\r\n} ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un supermercado inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \"nombre\":\"Ch\", \r\n    \"longitud\": \"17.5729\",\r\n    \"latitud\": \"8.7864\",\r\n    \"pagWeb\": \"www.ejemplo.com\"\r\n\r\n} ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todas los supermercados",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of museums > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un supermercado por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/supermarkets/:supermercadoId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets",
						":supermercadoId"
					],
					"variable": [
						{
							"key": "supermercadoId",
							"value": "{{supermercado_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un supermercado por un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El supermercado con el id proporcionado no ha sido encontrado.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/supermarkets/:supermercadoId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets",
						":supermercadoId"
					],
					"variable": [
						{
							"key": "supermercadoId",
							"value": "37817931-87ea-489c-a6bf-01c11e59d580"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar un supermercado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \"nombre\":\"Curadores Supermarket\", \r\n    \"longitud\": \"17.5729\",\r\n    \"latitud\": \"8.7864\",\r\n    \"pagWeb\": \"www.ejemplo.com\"\r\n\r\n} ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/supermarkets/:supermercadoId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets",
						":supermercadoId"
					],
					"variable": [
						{
							"key": "supermercadoId",
							"value": "{{supermercado_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar un supermercado con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El supermercado con el id proporcionado no ha sido encontrado.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \"nombre\":\"Chavelitas Supermarket\", \r\n    \"longitud\": \"17.5729\",\r\n    \"latitud\": \"8.7864\",\r\n    \"pagWeb\": \"www.ejemplo.com\"\r\n\r\n} ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/supermarkets/:supermercadoId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets",
						":supermercadoId"
					],
					"variable": [
						{
							"key": "supermercadoId",
							"value": "37817931-87ea-489c-a6bf-01c11e59d589"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un supermercado por su ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/supermarkets/:supermercadoId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets",
						":supermercadoId"
					],
					"variable": [
						{
							"key": "supermercadoId",
							"value": "{{supermercado_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un supermercado con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El supermercado con el id proporcionado no ha sido encontrado.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/supermarkets/:supermercadoId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets",
						":supermercadoId"
					],
					"variable": [
						{
							"key": "supermercadoId",
							"value": "37817931-87ea-489c-a6bf-01c11e59d581"
						}
					]
				}
			},
			"response": []
		}
	]
}